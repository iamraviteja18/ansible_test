---

- name: ({{ ansible_distribution }}) Ensure required packages are installed
  package:
   name: "{{ item }}"
   state: present
  loop: "{{ gradle_required_packages }}"

- name: ({{ ansible_distribution }}) Create installation directories ({{ unarchive_parent_dir }})
  file:
   path: "{{ unarchive_parent_dir }}"
   state: directory

- name: ({{ ansible_distribution }}) Unarchive gradle archives to dir ({{ unarchive_parent_dir }})
  unarchive:
   src: "{{ downloaded_file }}"
   dest: "{{ unarchive_parent_dir }}"
   remote_src: true

- name: ({{ ansible_distribution }}) Find all script files
  find:
   file_type: file
   paths: "{{ install_dir }}/bin/"
   patterns: "gradle"
   recurse: false
   use_regex: false
  register: scripts_find_result

- name: ({{ ansible_distribution }}) Print Find task register result JSON
  debug:
   var: scripts_find_result

- name: ({{ ansible_distribution }}) Set execution right to script files
  file:
   dest: "{{ item.path }}"
   mode: "a+rx"
  with_items: "{{ scripts_find_result.files }}"

- name: ({{ ansible_distribution }}) Set the Gradle bin commands links in /usr/bin/
  file:
   src: "{{ install_dir }}/bin/{{ item }}"
   dest: "/usr/bin/{{ item }}"
   state: link
   mode: a+x
  with_items: "{{ alternatives }}"
  when:
   - gradle_default

- name: ({{ ansible_distribution }}) Make sure /etc/profile.d/ directory exists
  file:
   path: "/etc/profile.d/"
   mode: 0755
   state: directory
  when:
   - gradle_default

- name: ({{ ansible_distribution }}) Set the GRADLE_* variable in global environment file
  lineinfile:
   dest: "/etc/environment"
   regexp: "{{ item.key }}="
   line: "{{ item.key }}={{ item.value }}"
  loop:
   - key: "GRADLE_HOME"
     value: "{{ install_dir }}"
   - key: "GRADLE_USER_HOME"
     value: "{{ gradle_local_repository }}"

- name: ({{ ansible_distribution }}) Make sure {{ gradle_local_repository }} directory exists
  file:
   path: "{{ gradle_local_repository }}"
   mode: 0755
   state: directory
   owner: "{{ gradle_user }}"
   group: "{{ gradle_group }}"

- name: ({{ ansible_distribution }}) Generate Gradle Settings
  template:
   src: "templates/gradle.properties.j2"
   dest: "{{ gradle_local_repository | regex_replace('\\/$', '') }}/gradle.properties"
   mode: 0755
   owner: "{{ gradle_user }}"
   group: "{{ gradle_group }}"

- name: ({{ ansible_distribution }}) Set the GRADLE_HOME
  template:
   src: "templates/gradle_home.sh.j2"
   dest: "/etc/profile.d/gradle_home.sh"
   mode: a+x
  when:
   - gradle_default
